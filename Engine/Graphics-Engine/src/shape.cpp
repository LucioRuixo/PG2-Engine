#include "Shape.h"

float vertexBufferTri[] = {
	//Plane
	//-------------------
	//-0.5f,  0.5f, 0.0f,	   1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	// 0.5f,  0.5f, 0.0f,	   0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	// 0.5f, -0.5f, 0.0f,	   0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	//					   					    
	// 0.5f, -0.5f, 0.0f,	   0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	//-0.5f, -0.5f, 0.0f,	   1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	//-0.5f,  0.5f, 0.0f,	   1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	//-------------------

	//Cube
	//-------------------
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f, -0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	
	-0.5f, -0.5f,  0.5f,    1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,    0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
							
	-0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	-0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	-0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	
	 0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	
	-0.5f,  0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f,  0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f
	//-------------------
};
/*
float vertexBufferTri[] = {
	 0.5f,  0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
	 0.5f, -0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
	-0.5f, -0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
	-0.5f,  0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 1.0f
};

unsigned int quadIndices[] = {  // note that we start from 0!
	0, 1, 3,   // first triangle
	1, 2, 3    // second triangle
};

float vertexBufferTri[] = {
	-0.5f, -0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   0.0f, 0.0f,
	 0.5f, -0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   1.0f, 0.0f,
	 0.0f,  0.5f, 0.0f,   1.0f, 1.0f, 1.0f,   0.5f, 1.0f
};

unsigned int triIndices[] = {
	0, 1, 2
};
*/

Shape::Shape(Renderer* _renderer, int _type) : Entity2D(_renderer) {
	renderer = _renderer;
	type = _type;
	//vertexBufferSize = 48;
}

Shape::~Shape() {}

void Shape::setBufferData() {
	renderer->setBufferData(/*vertexBufferSize*/QUAD_VERTEX_BUFFER_SIZE, vertexBufferTri);
}