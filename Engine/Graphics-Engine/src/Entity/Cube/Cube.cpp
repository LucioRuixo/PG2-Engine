#include "Cube.h"

float Cube::vertices[] =
{
	//Position            //Color              //Texture coordinates

	//Plane
	//-------------------
	//With TBLR
	//TL.x, TL.y, 0.0f,	  1.0f, 0.0f, 0.0f,	  0.0f, 1.0f,
	//TR.x, TR.y, 0.0f,	  0.0f, 1.0f, 0.0f,	  1.0f, 1.0f,
	//BR.x, BR.y, 0.0f,	  0.0f, 0.0f, 1.0f,	  1.0f, 0.0f,
	//					  					  
	//BR.x, BR.y, 0.0f,	  0.0f, 0.0f, 1.0f,	  1.0f, 0.0f,
	//BL.x, BL.y, 0.0f,	  1.0f, 1.0f, 1.0f,	  0.0f, 0.0f,
	//TL.x, TL.y, 0.0f,	  1.0f, 0.0f, 0.0f,	  0.0f, 1.0f

	//Without TBLR
	//-0.5f,  0.5f, 0.0f,	   1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	// 0.5f,  0.5f, 0.0f,	   0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	// 0.5f, -0.5f, 0.0f,	   0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	//					   					    
	// 0.5f, -0.5f, 0.0f,	   0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	//-0.5f, -0.5f, 0.0f,	   1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	//-0.5f,  0.5f, 0.0f,	   1.0f, 0.0f, 0.0f,    1.0f, 1.0f
	//-------------------

	//Cube
	//-------------------
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f, -0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,

	-0.5f, -0.5f,  0.5f,    1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,    0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,

	-0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	-0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	-0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,

	 0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,

	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f, -0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f, -0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,

	-0.5f,  0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f,
	 0.5f,  0.5f, -0.5f,  	0.0f, 1.0f, 0.0f,    0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	 0.5f,  0.5f,  0.5f,  	0.0f, 0.0f, 1.0f,    0.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  	1.0f, 1.0f, 1.0f,    1.0f, 0.0f,
	-0.5f,  0.5f, -0.5f,  	1.0f, 0.0f, 0.0f,    1.0f, 1.0f
	//-------------------
};

Cube::Cube(Renderer* _renderer/*, int _type*/) : Entity(_renderer)
{
	renderer = _renderer;
	//type = _type;

	for (int i = 0; i < CUBE_VERTEX_COMPONENTS; i++) vertexBuffer[i] = vertices[i];

	renderer->setBufferData(CUBE_VERTEX_COMPONENTS, vertexBuffer);
}

Cube::~Cube() {}